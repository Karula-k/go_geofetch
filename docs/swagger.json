{
    "swagger": "2.0",
    "info": {
        "description": "This is an Geo Fetch and Geo Fencing for Backend",
        "title": "GeoFetch API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login by username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "x-order": "1",
                        "description": "login body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/refresh_token": {
            "post": {
                "description": "refresh token by body",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh Token",
                "parameters": [
                    {
                        "description": "refresh token",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "register by username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "register",
                "parameters": [
                    {
                        "x-order": "1",
                        "description": "login body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vehicles/dummy": {
            "post": {
                "description": "Receives a request, creates a dummy vehicle location, and publishes it to MQTT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vehicle"
                ],
                "summary": "Simulate vehicle location update",
                "parameters": [
                    {
                        "description": "Dummy vehicle location data",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.VehiclesDummyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vehicle location published",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/vehicles/{vehicle_id}/history": {
            "get": {
                "description": "Queries the database for the location history of a vehicle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vehicle"
                ],
                "summary": "Retrieve vehicle location history",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vehicle ID",
                        "name": "vehicle_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Start timestamp (Unix timestamp)",
                        "name": "start",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "End timestamp (Unix timestamp)",
                        "name": "end",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/generated.VehicleLocation"
                            }
                        }
                    }
                }
            }
        },
        "/vehicles/{vehicle_id}/location": {
            "get": {
                "description": "Queries the database for the latest location of a vehicle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vehicle"
                ],
                "summary": "Retrieve latest vehicle location",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vehicle ID",
                        "name": "vehicle_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/generated.VehicleLocation"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "generated.VehicleLocation": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "integer"
                },
                "vehicle_id": {
                    "type": "string"
                }
            }
        },
        "models.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "x-order": "0"
                },
                "password": {
                    "type": "string",
                    "x-order": "1"
                }
            }
        },
        "models.RefreshTokenRequest": {
            "type": "object",
            "properties": {
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "models.RegisterRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string",
                    "x-order": "0"
                },
                "password": {
                    "type": "string",
                    "x-order": "1"
                }
            }
        },
        "models.VehiclesDummyRequest": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "timestamp": {
                    "type": "integer"
                },
                "vehicle_id": {
                    "type": "string"
                }
            }
        }
    }
}