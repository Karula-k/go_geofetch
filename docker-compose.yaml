services:
  api:
    build:
      dockerfile: Dockerfile
      context: .
    depends_on:
      postgres:
        condition: service_healthy
      mosquitto:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PORT: ${PORT}
      JWT_SECRET: ${JWT_SECRET}
      MQTT_BROKER: ${MQTT_BROKER}
      MQTT_CLIENT_ID: ${MQTT_CLIENT_ID}
      RABBITMQ_URL: ${RABBITMQ_URL}
    env_file:
      - .env
    ports:
      - "4000:4000"

  postgres:
    image: postgres:17
    ports:
      - "35000:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    restart: always
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./musquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    environment:
      - TZ=Asia/Jakarta

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    env_file:
      - .env
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  rabbitmq_data:
